@startuml
!include ../style.puml
skinparam ArrowFontStyle plain

actor User as user USER_COLOR
participant ":SGSafe" as sgsafe SGSAFE_COLOR
participant ":Parser" as parser PARSER_COLOR
participant ":Validator" as validator VALIDATOR_COLOR
participant ":Display" as display DISPLAY_COLOR

activate sgsafe SGSAFE_COLOR

sgsafe -[SGSAFE_COLOR]> display :printWelcomeMessage()
activate display DISPLAY_COLOR
deactivate display DISPLAY_COLOR

loop until userInput == "bye"
    user -[USER_COLOR]> sgsafe : userInput

    sgsafe -[SGSAFE_COLOR]> parser : parseInput(...)
    activate parser PARSER_COLOR

    parser -[PARSER_COLOR]> parser : parseCommand(...)
    activate parser

    parser -[PARSER_COLOR]> parser : extractFlagValues(...)
    activate parser
    deactivate parser

    parser -[PARSER_COLOR]> validator : haveValidFlags(...)
    activate validator VALIDATOR_COLOR
    deactivate validator

    create participant ":Command" as cmd COMMAND_COLOR
    parser -[PARSER_COLOR]> cmd : new Command(...)
    activate cmd COMMAND_COLOR

    deactivate parser

    parser --> sgsafe : return Command
    deactivate parser

    sgsafe -[SGSAFE_COLOR]> cmd : execute()

    participant ":CaseManager" as caseMgr MODEL_COLOR
    participant ":Case" as case MODEL_COLOR
    participant ":Storage" as storage STORAGE_COLOR

    cmd -[COMMAND_COLOR]> caseMgr : perform some operation
    activate caseMgr MODEL_COLOR

    caseMgr -[MODEL_COLOR]> case : perform some operation
    activate case MODEL_COLOR
    deactivate case
    deactivate caseMgr

    cmd -[COMMAND_COLOR]> display : printMessage(...)
    activate display DISPLAY_COLOR
    deactivate display
    deactivate cmd

    destroy cmd


    sgsafe -[SGSAFE_COLOR]> storage : saveToFile()
    activate storage STORAGE_COLOR
    deactivate storage

end

sgsafe -[SGSAFE_COLOR]> display :printGoodbyeMessage()
activate display DISPLAY_COLOR
deactivate display DISPLAY_COLOR

@enduml